import ShowCode from "@/components/showCode";
const Page = () => {
	const VideoKeyBoard = `
    <div class="VideoPlayer">
    <video src="/movie/sample.mp4">
    </video>
    <div class="VideoPlayer__controls"role="group">
    <button type="button">
    一時停止
    </button>
    <button type="button">
    再生
    </button>
    </div>
    </div>
`;
    

	return (
		<div>
			<h1>キーボード操作の基本操作</h1>

			<h2>キーボードで操作できることは、アクセシビリティを担保する上で非常に重要</h2>
            <h4>GUIにおいて、悪い例</h4>
			<ul>
				<li>
					<p>目と手を連動させないと使用できないポインティングデバイス</p>
                    <p>理由: 画面を見ることができないユーザーには使用できない</p>
                    <p>代替: スクリーンリーダーなどのキーボード操作をメインとする支援技術を用いてWebを操作する</p>
				</li>
			</ul>

            <h2>「キーボードとマウスの持ち替え」の負担は、支援技術ユーザーにとっては、辛い</h2>
            <p>支援技術などでは、画面上の特定の位置をクリックするよりもキーボードの操作をエミュレートしたほうが容易な場合がある</p>
            <p>また手や指先が正確に動かせない場合、入力候補をクリックするよりも、キーボードで対象を選んで実行するほうが正確に操作ができる。</p>

            <h3>結論</h3>
            <p>テキスト入力とUI操作の切り替えがしばしば発生するアプリケーション（経理の帳簿入力やテキストエディタ）においても、キーボードで操作が完結できることは非常に有用でしょう。</p>

            <h2>よくある事例から見る課題一覧</h2>
            <p>ここからは、よくあるアクセシブルでない事例をもとに、アクセシブルでなくなってしまう原因とそのチェック方法、そして改善の仕方を解説していきます。</p>
            
            <h3>1. キーボードで操作できない--インタラクティブ要素を用いていない</h3>
            <p>これらの原因</p>
            <p>適切なHTMLの要素を使用していないことによって生み出されます</p>
            <ul>
					<p>href属性を持つa要素</p>
                    <p>button要素</p>
                    <p>type属性の値がhiddenではないinput要素</p>
                    <p>select要素</p>
                    <p>textarea要素</p>
                    <p>controls属性を持つvideo要素やaudio要素</p>
                    <p>details要素（実際にフォーカスがあたるのは子のsummary要素）</p>
                    <p>dialog要素</p>
			</ul>
            <h3>2. キーボードで操作できない──インタラクティブ要素を隠している</h3>
            <p>たとえば見た目を変更するためにinput要素をdisplay:noneで隠してCSSや画像でチェックボックスを描画している場合、マウスではlabel要素をクリックすれば、関連付けられたinput要素を操作できます。一見問題ないように見えますが、display:noneで隠した要素はフォーカスを受け取ることができないため、キーボードでは操作できません。</p>
            <h4>原因例</h4>
            <p>CSSのdisplay: noneで非表示にしている場合</p>

            <h3>3. キーボードで操作できない──マウスでしか表示されないUI</h3>
            <p>マウス操作のみで表示できる領域内にUIがある場合も、そのUIをキーボードで操作することはできません。</p>
            <ShowCode code={VideoKeyBoard}></ShowCode>

            <h3>4. キーボード操作の現在位置がわからない</h3>
            <p>キーボードで操作するためには、フォーカスがどの要素にあたっているかわかることが重要です。</p>
            <p>現在選択しているものがわからなければ、ユーザーは何が起こるかわからないので実行はできません。</p>
            <p>デフォルトでは、要素にフォーカスするとそれを示すフォーカスインジケーターが表示されます</p>
		</div>
	);
};

export default Page;

