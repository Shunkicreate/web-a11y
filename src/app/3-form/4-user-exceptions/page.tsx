const Page = () => {
    return (
      <div>
        <h1>ユーザーが予測できる動作</h1>
        <p>
         ユーザーの予測に反さないwebページのを作っていこう
        </p>
        {/* 1 */}
        <h2 style={{marginTop: 40}}>よくある事例と改善案</h2>
        <h3 style={{marginTop: 40}}>事例1. フォームコントロールの値を変更した時に画面遷移が発生する</h3>
        <p>
        <ul>
          <li>1. セレクトボックスを展開して値を変更する方法</li>
          <li style={{marginTop: 12}}>2. セレクトボックスを展開せず値を変更する方法</li>
        </ul>
        </p>
        <h4 style={{marginTop: 20}}>解決策 コンテンツの大きな変化を予測できるようにする。</h4>
        <ul>
          <li>セレクトボックスと値を変更するボタンを切り分ける</li>
          <li>セクトボックスの値が少ない場合は、リンクとして実装する</li>
        </ul>
        {/* 2 */}
        <h3 style={{marginTop: 60}}>事例2. ページ読み込み時やフォームコントロールへの値の入力時にフォーカスが移動する</h3>
        <p>
         フォームの値を入力した時にフォーカスが移動するとキーボード操作ユーザーが次の次のフォームに行ってしまう
        </p>
        <h4 style={{marginTop: 20}}>解決策 </h4>
        <ul>
          <li>フォームコントロールの値を入力した時に移動しないようにする</li>
          <li>ユーザーがフォーカスの移動を予測できるようにうする</li>
          <li> ※ ユーザーが予測できるようなフォームの場合はオッケー</li>
        </ul>
      </div>
    );
  };

  export default Page;
